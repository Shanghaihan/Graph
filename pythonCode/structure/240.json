{"edges": [[0, 1], [0, 2], [0, 3], [0, 3], [0, 4], [0, 5], [1, 0], [1, 2], [1, 3], [2, 0], [2, 1], [2, 3], [3, 0], [3, 1], [3, 2], [3, 4], [3, 0], [3, 5], [3, 0], [3, 1], [3, 2], [3, 4], [3, 0], [3, 5], [4, 3], [4, 0], [4, 5], [5, 3], [5, 4], [5, 0]], "features": {"0": "0", "1": "1", "2": "2", "3": "3", "4": "4", "5": "5"}, "count": 2, "cite": 10, "position": 2.0, "connect": 1.2, "totalConnect": 2.727272727272727, "totalCount": 0.3333333333333333, "totalCite": 5.0, "totalPosition": 4.0, "paper": [{"title": "Implicit Density Projection for Volume Conserving Liquids.", "author": ["Kugelstadt,Tassilo", "Longva,Andreas", "Thurey,Nils", "Bender,Jan"], "soname": "IEEE transactions on visualization and computer graphics", "DOI": "10.1109/TVCG.2019.2947437", "keywords": "", "abstract": "We propose a novel implicit density projection approach for hybrid methods like FLIP and APIC to enforce volume conservation of incompressible liquids. A problem of the standard divergence-free pressure solver is that it only has a differential view on density changes. Numerical volume errors, which occur due to large time steps and limited accuracy of pressure projections, are invisible to the solver and cannot be corrected. Moreover, these errors accumulate over time and can lead to drastic volume changes. The proposed method enforces constant density throughout the fluid by tracking density via the particles of the simulator. We use the continuous mass conservation law to derive a pressure Poisson equation which also penalizes density deviations. It can be discretized with standard approaches and easily implemented into existing code. Our method enables us to relax the strict time step and solver accuracy requirements of a regular solver, leading to significantly higher performance. Moreover, our approach is able to robustly recover from degenerate configurations, can push fluid particles out of solid obstacles without losing volume, and generates more uniform particle distributions. Comparisons with FLIP, APIC and previous volume correction approaches demonstrate significant improvements in terms of incompressibility, visual realism and computational performance.", "cite": 0, "year": "2019"}, {"title": "Turbulent Micropolar SPH Fluids with Foam", "author": ["Bender,Jan", "Koschier,Dan", "Kugelstadt,Tassilo", "Weiler,Marcel"], "soname": "IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS", "DOI": "10.1109/TVCG.2018.2832080", "keywords": "", "abstract": "In this paper we introduce a novel micropolar material model for the simulation of turbulent inviscid fluids. The governing equations are solved by using the concept of Smoothed Particle Hydrodynamics (SPH). As already investigated in previous works, SPH fluid simulations suffer from numerical diffusion which leads to a lower vorticity, a loss in turbulent details and finally in less realistic results. To solve this problem we propose a micropolar fluid model. The micropolar fluid model is a generalization of the classical Navier-Stokes equations, which are typically used in computer graphics to simulate fluids. In contrast to the classical Navier-Stokes model, micropolar fluids have a microstructure and therefore consider the rotational motion of fluid particles. In addition to the linear velocity field these fluids also have a field of microrotation which represents existing vortices and provides a source for new ones. However, classical micropolar materials are viscous and the translational and the rotational motion are coupled in a dissipative way. Since our goal is to simulate turbulent fluids, we introduce a novel modified micropolar material for inviscid fluids with a non-dissipative coupling. Our model can generate realistic turbulences, is linear and angular momentum conserving, can be easily integrated in existing SPH simulation methods and its computational overhead is negligible. Another important visual feature of turbulent liquids is foam. Therefore, we present a post-processing method which considers microrotation in the foam particle generation. It works completely automatic and requires only one user-defined parameter to control the amount of foam.", "cite": 10, "year": "2019"}], "name": "Kugelstadt,Tassilo", "nodes": [{"id": "0"}, {"id": "1"}, {"id": "2"}, {"id": "3"}, {"id": "4"}, {"id": "5"}], "edgess": [{"source": "0", "target": "1"}, {"source": "0", "target": "2"}, {"source": "0", "target": "3"}, {"source": "0", "target": "4"}, {"source": "0", "target": "5"}, {"source": "1", "target": "2"}, {"source": "1", "target": "3"}, {"source": "2", "target": "3"}, {"source": "3", "target": "4"}, {"source": "3", "target": "5"}, {"source": "4", "target": "5"}], "year": 2019, "authorId": {"0": "Kugelstadt,Tassilo", "1": "Longva,Andreas", "2": "Thurey,Nils", "3": "Bender,Jan", "4": "Koschier,Dan", "5": "Weiler,Marcel"}}